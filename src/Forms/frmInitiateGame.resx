<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALxYABe5XACBul0Az7lcAPO6XAD1ul4AzrldAIC5XAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALpbAFa5XADsu1wApbpcAPi5XABgu1wAXrpcAPi7XAClulwA6rpd
        AFIAAAAAAAAAAAAAAAAAAAAAAAAAALhdAFe5XQDnvFwARbhdAIO5XAC1t1sAGbdbABm6XACzuVwAgbZb
        AEa5XQDnul0AUgAAAAAAAAAAAAAAALpYABq5XADsvFwARbpYABq6XADfuFoATLdbABm3WwAZuVoASbpc
        AN+6WAAatlsARrpdAOm5XAAWAAAAAAAAAAC6XQCGul0A/7pdAP+6XQD/ul0A/7pdAP+6XQD/ul0A/7pd
        AP+6XQD/ul0A/7pdAP+6XQD/uV0AgAAAAAAAAAAAul4A07dbAEu3WwAZuVwAa7ldALG3WwAZt1sAGbdb
        ABm3WwAZuV0AsbtcAGm3WwAZuFoATLpeAM4AAAAAAAAAALpdALK2XgAjt1sAGbtcAIS6XACYt1sAGbdb
        ABm3WwAZt1sAGbpcAJi4XAB/t1sAGbZeACO5XADzAAAAAB5/HrYfgh8ptm0AB7ZhABW5XACBulwAmLdb
        ABm3WwAZt1sAGbdbABm6XACYuFwAf7dbABm2XgAjuF0A9AAAAAAfgB//H4Af+x+AH5kkhSQVuFwARbpd
        AJ+3WwAZt1sAGbdbABm3WwAZuV0AsbtcAGm3WwAZuFoATLpdAM8AAAAAH4Af/x+AH/8fgB//H38f7h6A
        HneOZgoZuFwAlblcAPq6XQD/ul0A/7pdAP+6XQD/ul0A/7pdAP+6XACCAAAAAB+AH/8fgB//H4Af/x+A
        H/8fgB//HoAe2R5/Hky/PwAEuFUAErdbAEu6XADfulgAGrxcAEW6XADqvFgAFwAAAAAfgB//H4Af/x+A
        H/8fgB//H4Af/x6AHtkegR5Vvz8ABLhVABK5XQC0ulwAgrpbAEO5XQDmulsAVgAAAAAAAAAAH4Af/x+A
        H/8fgB//H38f7h6AHneOZgoZuVsAk7lbAFy5WwBfulwA+LpdAKO6XADrulsAVgAAAAAAAAAAAAAAAB+A
        H/8fgB/7H4AfmSSFJBUAAAAAuVsAcrldANK5XAD3uVwA97peANO5XACEv18AGAAAAAAAAAAAAAAAAAAA
        AAAfgB+7HIIcLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAPAPAADgBwAAwAMAAIABAACAAQAAgAEAAIABAAAAAQAAAAEAAAABAAAAAQAAAAMAAAAH
        AAAIDwAAP/8AAA==
</value>
  </data>
</root>